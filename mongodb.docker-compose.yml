#############################################################################################################
# Start your application services by typing at the Docker CLI:
#     ~$> docker-compose -f <"a unique name">.docker-compose.yml up -d
# Shutdown services with the Docker CLI command:
#     ~$> docker-compose -f  <"a unique name">.docker-compose.yml down --remove-orphans
#     The "--remove-orphans" flag is used to remove any child container instances that may have been created
# Build, remove orphaned containers and refresh services:
#     ~$> docker-compose -f docker-compose.yml up --always-recreate-deps --renew-anon-volumes --remove-orphans --force-recreate -d --build
#############################################################################################################
version: '3.8'
# Define application network
networks:
  mongodb-network:
    driver: bridge

# Define volumes
volumes:
  mongodb_data: null

# Define services
services:
  # MongoDB service
  mongo:
#    image: mongo:4-bionic
    build:
      context: .
      dockerfile: .devcontainer/services/mongodb/Dockerfile
      args:
        PORT: ${MONGO_PORT:-27017}
    container_name: mongodb
    restart: always
    env_file:
      - .devcontainer/services/mongodb/mongodb.env
    environment:
        MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-resume} #| MongoDB admin username
        MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-portfolio} #| MongoDB admin password
        MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-resume} #| MongoDB database name
        MONGO_HOST: ${MONGO_HOST:-mongodb} #| MongoDB host
        MONGO_PORT: ${MONGO_PORT:-27017} #| MongoDB port
        MONGO_EXPRESS_PORT: ${MONGO_EXPRESS_PORT:-8081} #| Mongo Express port
    expose:
      - ${MONGO_PORT:-27017}
    ports:
      - ${MONGO_PORT:-27017}:${MONGO_PORT:-27017}
    volumes:
      - mongodb_data:/data/db
    networks:
      mongodb-network:
        aliases:
          - mongodb
  # Mongo Express service
  mongo-express:
    image: mongo-express:0.54.0
    container_name: mongo-express
    restart: always
    ports:
      - ${MONGO_EXPRESS_PORT:-8081}:${MONGO_EXPRESS_PORT:-8081}
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME:-resume} #| MongoDB admin username
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-portfolio} #| MongoDB admin password
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME:-resume}:${MONGO_INITDB_ROOT_PASSWORD:-portfolio}@${MONGO_HOST:-mongodb}:${MONGO_PORT:-27017}/
    #      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'false'          #| Enable admin access to all databases. Send strings: `"true"` or `"false"`
    #      ME_CONFIG_MONGODB_SERVER: Hyfi                   #| MongoDB container name. Use comma delimited list of host names for replica sets.
    #      ME_CONFIG_MONGODB_AUTH_DATABASE: Hyfi            #| Database name
    #      ME_CONFIG_MONGODB_AUTH_USERNAME: root            #| Database username
    #      ME_CONFIG_MONGODB_AUTH_PASSWORD: ${MONGODB_PASSWORD} #| Database password
    #      ME_CONFIG_BASICAUTH_USERNAME    | ''             #| mongo-express web username
    #      ME_CONFIG_BASICAUTH_PASSWORD    | ''             #| mongo-express web password
    #      ME_CONFIG_MONGODB_PORT: 27017                    #| MongoDB port
    #      ME_CONFIG_MONGODB_SERVER: mongo                  #| MongoDB container name. Use comma delimited list of host names for replica sets.
    #      ME_CONFIG_OPTIONS_EDITORTHEME   | 'default'      #| mongo-express editor color theme, [more here](http://codemirror.net/demo/theme.html)
    #      ME_CONFIG_REQUEST_SIZE          | '100kb'        #| Maximum payload size. CRUD operations above this size will fail in [body-parser](https://www.npmjs.com/package/body-parser).
    #      ME_CONFIG_SITE_BASEURL: ${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongo:27017/            #| Set the baseUrl to ease mounting at a subdirectory. Remember to include a leading and trailing slash.
    #      ME_CONFIG_SITE_COOKIESECRET     | 'cookiesecret' #| String used by [cookie-parser middleware](https://www.npmjs.com/package/cookie-parser) to sign cookies.
    #      ME_CONFIG_SITE_SESSIONSECRET    | 'sessionsecret'#| String used to sign the session ID cookie by [express-session middleware](https://www.npmjs.com/package/express-session).
    #      ME_CONFIG_SITE_SSL_ENABLED      | 'false'        #| Enable SSL.
    #      ME_CONFIG_SITE_SSL_CRT_PATH     | ''             #| SSL certificate file.
    #      ME_CONFIG_SITE_SSL_KEY_PATH     | ''             #| SSL key file.
    depends_on:
      - mongo
    links:
      - mongo
    networks:
      - mongodb-network