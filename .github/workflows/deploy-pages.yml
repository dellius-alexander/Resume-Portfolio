# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
##########################################################################
# This workflow will build a Java project with Gradle and
# cache/restore any dependencies to improve the workflow execution time
##########################################################################
name: 'Build, Test, Deploy Github Pages'
env:
  TZ: 'America/New_York'
on:
  push:
    branches:
      - 'main'
      - 'release*'
      - '*'

  pull_request:
    branches:
      - 'main'
      - 'release*'
      - '*'

#  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false
# Workflow Jobs
jobs:
  github-pages:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: 18.x
          
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          cd frontend
          npm install

      - name: Project Contents
        run: |
          ls -liaR

      - name: Stage assets
        run: |
          sh staging.sh "staging";

      - name: Publish to github-pages
        run: |
          ls -lia;
          git config --global user.name ${USER_NAME};
          git config --global user.name ${USER_EMAIL};
          git remote set-url origin https://${USER_NAME}:${RESUME_PORTFOLIO_TOKEN}@github.com/${GITHUB_REPOSITORY};
          npm install --save-dev gh-pages;
          npx gh-pages -d 'staging' -m 'github pages demo updated' \
          --dest '.' \
          -b 'github-pages' -u "${FULL_NAME} <${USER_EMAIL}>";
          echo "Successfully Published to gh-pages repository................................................";
        env:
          RESUME_PORTFOLIO_TOKEN: ${{ secrets.RESUME_PORTFOLIO_TOKEN }}
          FULL_NAME: ${{ secrets.FULL_NAME }}
          NODE_ENV: ${{ env.NODE_ENV }};
          USER_NAME: ${{ secrets.USER_NAME }}
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository to pages
          path: 'staging'
          # Depending on branch protection rules, a  manually populated
          # `GITHUB_TOKEN_WORKAROUND` secret with permissions to push to
          # a protected branch must be used. This secret can have an arbitrary
          # name, as an example, you can use `SOME_RANDOM_TOKEN_STRING`.
          # Since this repository has no protected branches we will omit
          # this part of the step. end


      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Deploy to GitHub Pages
        if: success()
        id: deployment
        uses: actions/deploy-pages@v1
