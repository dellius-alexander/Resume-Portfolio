#############################################################################################################
# Start your application services by typing at the Docker CLI:
#     ~$> docker-compose -f <"a unique name">.docker-compose.yml up -d
# Shutdown services with the Docker CLI command:
#     ~$> docker-compose -f  <"a unique name">.docker-compose.yml down --remove-orphans
#     The "--remove-orphans" flag is used to remove any child container instances that may have been created
# Build, remove orphaned containers and refresh services:
#     ~$> docker-compose -f docker-compose.yml up --always-recreate-deps --renew-anon-volumes --remove-orphans --force-recreate -d --build
#############################################################################################################
version: '3.8'
# Define application network
networks:
  resume-network:
    driver: bridge
    ipam:
      driver: default
  backend-network:
    driver: bridge
    ipam:
      driver: default

# Define mongodb volume
volumes:
  mailu-volume: null

services:
  # node backend service
  frontend:
    build:
      context: .
      dockerfile: .devcontainer/services/frontend/frontend.Dockerfile
      args:
        HOSTNAME: ${HOSTNAME}
        USER: ${USERNAME}
        CERTS_DIR: ${CERTS_DIR}
        UUID: ${UUID}
        PORT: ${PORT}
        WORKDIR: /home/${USERNAME}/app
        VERSION: 18
    container_name: frontend
    user: ${USERNAME}
    hostname: ${HOSTNAME}
    working_dir: /home/${USERNAME}/app
    env_file:
      - .devcontainer/frontend.env
    volumes:
      - ./frontend:/home/${USERNAME}/app
      - .devcontainer/certs/.certs:/usr/local/app/certs/.certs
    expose:
      - ${PORT}
    ports:
      - ${PORT}:${PORT}
    networks:
      resume-network:
        aliases:
          - frontend

#  # Email Engine service
#  email-engine:
#    restart: always
#    image: postalsys/emailengine:latest
#    ports:
#      # API and web interface
#      - '3000:3000'
#      # SMTP for message submission
#      - '2525:2525'
#      # IMAP proxy
#      - '9993:9993'
#    depends_on:
#      - redis
#    environment:
#      # Configuration to EmailEngine can be passed via environment variables
#      # For full list see https://github.com/postalsys/emailengine#config-mapping
#
#      # Settings to write to v1/settings on startup (https://api.emailengine.app/#operation/postV1Settings)
#      # The following value is a YAML block scalar string, so make it sure it is properly indented
#      # This configuration enables SMTP server for local submission
#      EENGINE_SETTINGS: >
#        {
#            "smtpServerEnabled": true,
#            "smtpServerPort": 2525,
#            "smtpServerHost": "0.0.0.0",
#            "smtpServerAuthEnabled": true,
#            "smtpServerPassword": "passw0rd"
#        }
#
#      # Encryption secret
#      EENGINE_SECRET: 'secret'
#      # Database connection URL
#      EENGINE_REDIS: 'redis://redis:6379/2'
#    networks:
#      backend-network:
#        aliases:
#          - emailengine
#
#  redis:
#    image: redis:alpine
#    restart: always
#    volumes:
#      - /data
#    networks:
#        backend-network:
#            aliases:
#            - redis
  # mongodb service
#  backend:
#    image: mongo:6.0.2
#    container_name: backend
#    restart: always
#    env_file:
#      - .devcontainer/backend.env
#    volumes:
#      - mongodb-volume:/data
#    expose:
#      - "27017"
#    ports:
#      - "27017:27017"
#    networks:
#      resume-network:


