#############################################################################################################
# Start your application services by typing at the Docker CLI:
#     ~$> docker-compose -f <"a unique name">.docker-compose.yml up -d
# Shutdown services with the Docker CLI command:
#     ~$> docker-compose -f  <"a unique name">.docker-compose.yml down --remove-orphans
#     The "--remove-orphans" flag is used to remove any child container instances that may have been created
# Build, remove orphaned containers and refresh services:
#     ~$> docker-compose -f docker-compose.yml up --always-recreate-deps --renew-anon-volumes --remove-orphans --force-recreate -d --build
#############################################################################################################
version: '3.8'
# Define application network
networks:
  resume-network:
    driver: bridge
    ipam:
      driver: default

## Define volumes
#volumes:

# Define services
services:
  # node backend service
  frontend:
    build:
      context: .
      dockerfile: .devcontainer/services/frontend/Dockerfile
      args:
        HOSTNAME: ${HOSTNAME}
        USER: ${USERNAME}
        UUID: ${UUID}
        PORT: ${PORT}
        WORKDIR: /home/${USERNAME}/app
        VERSION: 18
    container_name: frontend
    user: ${USERNAME}
    hostname: ${HOSTNAME}
    working_dir: /home/${USERNAME}/app
    restart: on-failure
    env_file:
      - .devcontainer/services/frontend/frontend.env
    volumes:
      - ./frontend:/home/${USERNAME}/app
      - .devcontainer/certs/.certs:/etc/ssl/delliusalexander.com.d
    expose:
      - ${PORT}
    ports:
      - ${PORT}:${PORT}
    networks:
      resume-network:
        aliases:
          - frontend

